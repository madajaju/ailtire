@startuml

left to right direction


boundary children #black


entity parent #red

stack "t_s21" as t_s21Stack {
    queue t_s21Stack #red [
        <b><color:white>parent</color></b>
    ]
}
stack "t_s22" as t_s22Stack {
    queue t_s22Stack #red [
        <b><color:white>parent</color></b>
    ]
}



stack  "examplestacks_t2" #lightblue {
    queue childrennet #black [
            <b><color:white>children</color></b>
    ]
    childrennet -[#black]- children
    queue siblingnet #blue [
            <b><color:white>sibling</color></b>
    ]
    siblingnet -[#blue]- sibling
    queue parentnet #red [
            <b><color:white>parent</color></b>
    ]
    parentnet -[#red]- parent

node "stack21" as stack21Service
node "stack22" as stack22Service
node "frontend" as frontendService
node "gw" as gwService

        collections "t_s21:latest" as t_s21latestimage
            collections "t_s22:latest" as t_s22latestimage
    
        artifact "examplestacks_t_web" as examplestacks_t_webimage
    
        artifact "examplestacks_t_gw" as examplestacks_t_gwimage
    
}

stack21Service -[#black]- childrennet

stack21Service -[#red]- parentnet

stack22Service -[#black]- childrennet

stack22Service -[#red]- parentnet

frontendService -[#blue]- siblingnet

gwService -[#black]- childrennet

gwService -[#blue]- siblingnet
stack21Service .... t_s21latestimage
stack22Service .... t_s22latestimage
frontendService .... examplestacks_t_webimage
gwService .... examplestacks_t_gwimage

t_s21latestimage --> t_s21Stack

t_s22latestimage --> t_s22Stack


@enduml
