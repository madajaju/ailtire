<div class="modelActionBar">
   <%- partial('_actionBar.ejs', {definition: definition, obj:obj, className:className}) %>
</div>
<script src="/js/socket.io.js"></script>
<div class="modelDetail">
   <h3><%= className %></h3>
   <table class="state<%= obj.state %>">
       <tr class = "state<%= obj.state %>">
           <td align="right"><b>Status</b></td>
           <td><%= obj.state %></td>
       </tr>
      <% for(let name in definition.attributes) {
         let attr = definition.attributes[name];
      %>
      <tr>
          <td align="right"><b><%= name[0].toUpperCase() + name.slice(1) %></b></td>
          <% if(attr.type === 'json') { %>
              <td><%- partial('_json.ejs', {json: obj[name]}) %></td>
          <% } else { %>
             <td><%= obj[name] %></td>
          <% } %>
      </tr>
      <% } %>
      <% for(let name in definition.associations) {
      let assoc = definition.associations[name];
      %>
      <tr>
          <td align="right"><b><%= name[0].toUpperCase() + name.slice(1) %></b></td>
         <% if(obj[name]) { %>
            <% if(assoc.cardinality === 1) { %>
               <td class="hoverable state<%= obj[name].state %>" id="<%= obj[name].id %>" onmouseover="window.graph.selectNode('<%= obj[name].id %>');"><a href="/<%= assoc.type %>?id=<%= obj[name].id %>">
                   <%
                   let dname = obj[name].toString();
                   if(dname.length > 0) {
                   %>
                   <%= dname %>
                   <% } else { %>
                   <%= obj[name].className %>
                   <% } %>
               </a></td>
            <% } else { %>
                <td><table>
                <% for(let ai in obj[name]) {
                    %>
                        <tr id="<%=obj[name][ai].id%>" class="hoverable" onmouseover="window.graph.selectNode('<%= obj[name][ai].id %>');">
                            <td class="state<%= obj[name][ai].state %>"><a href="/<%= assoc.type %>?id=<%= obj[name][ai].id %>"><%= obj[name][ai].toString() %></a></td>
                        </tr>
                <% } %>
                </table></td>
            <% } %>
         <% } else { %>
            <td>NA</td>
         <% } %>
      </tr>
      <% } %>
   </table>
</div>

<div class="modelGraph">
    <svg width="960" height="600" id="DrawingArea"></svg>

    <script src="/js/d3.js"></script>
    <script src="/js/Graph.js"></script>
    <script src="/js/socket.io.js"></script>
    <script type="module">
        const socket = io('http://localhost:3000', { transport : ['websocket'] });
        let graph = new Graph("DrawingArea");
        let data = {nodes: {}, links: [ ]};
        <%
            let oid = obj.id;
            let otype = obj.className;
        let level = obj.package.name.replace(/ /g, '');
        %>
            data.nodes["<%= oid %>"] = {id:"<%= oid %>", name:"<%= obj.name %>", group: "<%= otype %>", level:'<%= level %>'};
        <%
        for (let aname in definition.associations) {
            if(obj[aname]) {
                    if(definition.associations[aname].cardinality === 1) {
                        let aoid = obj[aname].id;
                        let otype = obj[aname].className;
                        let level = obj[aname].definition.package.name.replace(/ /g, '');
                    %>
                        data.nodes["<%= aoid %>"] = {id:"<%= aoid  %>", name:"<%= obj[aname].name %>", group: '<%= otype %>', level:'<%= level %>'};
                        data.links.push({source:"<%= oid %>", target:"<%= aoid %>"});
                    <% } else {
                        // Iterate over the map/array of associations with this relationship.
                        for(let j in obj[aname]) {
                            if (obj[aname][j]) {
                                let aoid = obj[aname][j].id;
                                let otype = obj[aname][j].className;
                                if(obj[aname][j].definition) {
                                    level = obj[aname][j].definition.package.name.replace(/ /g, '');
                                }
                            %>
                                data.nodes["<%= aoid %>"] = {
                                    id: "<%= aoid  %>",
                                    name: "<%= obj[aname][j].name %>",
                                    group: '<%= otype %>',
                                    level: '<%= level %>'
                                };
                                data.links.push({source: "<%= oid %>", target: "<%= aoid %>"});
                            <%
                            }
                        }
                    }
                }
            }
         %>
        graph.simulate(data);

        socket.on('<%= className.toLowerCase() %>.update', (res) => {
            let obj = res.obj;
            let oid = obj._attributes.id;
            let level = obj.package;
            data.nodes[oid] = {id: oid, name: obj._attributes.name, group:"<%= className %>", level:'<%= level %>' };
            let aname = "";
            let aoid = "";
            let otype = "";
            let aobj = null;
        <% for (let aname in definition.associations) { %>
                aname = "<%= aname %>";
                if(obj._associations[aname]) {
                <%
                    if(definition.associations[aname].cardinality === 1) {
                    %>
                        aobj = obj._associations[aname];
                        otype = aobj.className;
                        aoid = obj._associations[aname].id;
                        let level = aobj.package;
                        data.nodes[aoid] = {id: aoid, name:obj._associations[aname].name, group: otype, level:level};
                        data.links.push({source:oid, target:aoid});
                    <% } else { %>
                        for(let j in obj._associations[aname]) {
                            aobj = obj._associations[aname][j];
                            otype = aobj.className;
                            let level = aobj.package;
                            aoid = aobj._attributes.id;
                            data.nodes[aoid] = {id: aoid, name: obj._associations[aname][j]._attributes.name, group: otype, level:level};
                            data.links.push({source:oid, target:aoid});
                        }
                    <% } %>
                }
            <% } %>
            graph.simulate(data);
        });
    </script>
</div>
