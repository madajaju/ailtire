@startuml
<% for(let aname in actors) { %>
actor "<%= aname %>"
<% } %>

entity EventBus

box <%= package.name %> <%= package.color %>
    boundary <%= package.shortname %> #white
    participant DataModel #white
end box

<% for(let aname in actors) {
%>
"<%= aname %>" -> <%= package.shortname %>: <%= scenario.name %>
<% for(let i in scenario.steps) {
    let step = scenario.steps[i];
    let names = step.action.split('/');
    let method = names.pop();
    let object = names.join('/');
    if(step.act) {
        step.act.obj;
    }
    let parameters = "";
    if(step.parameters) {
        let items = [];
        for(let name in step.parameters) {
            items.push(`${name}: ${step.parameters[name]}`);
        }
        parameters = items.join(',');
    }
%>
<% if(step.act) { %>
box "<%= step.act.pkg.name %>" #<%= step.act.pkg.color %>
    <%= package.shortname %> -> "<%= object %>": <%= method %> (<%= parameters %>)
end box
<% } else { %>
    <%= package.shortname %> -> "<%= object %>": <%= method %> (<%= parameters %>)
<% } %>

<% } %>
<% } %>
DataModel --/ EventBus : Model.Event

<% for(let i in package.depends) {
    let  dpkg = package.depends[i];
    if(dpkg) {
-%>
box "<%= dpkg.name %>" <%= dpkg.color %>
    boundary <%= dpkg.shortname %> #white
end box
EventBus -\ <%= dpkg.shortname %>: method()
<%= dpkg.shortname %> --/ EventBus: Model.Event2
<% }
} %>
EventBus --/ <%= package.shortname %> : method2()
@enduml
