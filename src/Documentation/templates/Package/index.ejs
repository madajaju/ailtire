<head>
    <base href="http://<%= global.ailtire.config.host %><%= global.ailtire.config.urlPrefix %>/" >

    <link rel="stylesheet/less" type="text/css" href="styles/importer.less" />
    <script src="js/less.js" type="text/javascript"></script>
</head>
<% let packageNoSpaces = package.name.replace(/ /g, ''); %>
<h1><%= package.name %></h1>
<%= package.description %>

<h2> Document Insert Here</h2>
<%- partial(basedir + '/doc.ejs', {obj:package}) %>

<h1>Logical 3D</h1>
<%- partial("./templates/Package/Logical3D.ejs", {package: package}) %>

<h2>Use Cases</h2>
<ul>
<% for(let uname in package.usecases) {
let uc = package.usecases[uname];
let ucName = uc.name;
let prefix = uc.prefix;
-%>
    <li> <a href='doc/usecase<%= prefix %>/<%= uname %>'><%= ucName %></a></li>
<% } %>
</ul>

<img src='<%= pageDir %>/UseCases.puml'></img>
<h2>Users</h2>
<ul>
<% for(let aname in actors) {
-%>
    <li><a href='doc/actor/<%= actors[aname].shortname %>'><%= actors[aname].name %></a></li>
<% } %>
</ul>

<img src='<%= pageDir %>/UserInteraction.puml'>

<h2>Interface</h2>
The subsystem has a REST, CLI, WebSocket, and Web interface. Use Cases and Scenarios can use any or all
of the interfaces to perform the work that needs to be completed. The following  diagram shows how
users interact with the system.

<img src='<%= pageDir %>/ScenarioMapping.puml'>

<ul>
<% for(let mname in package.interface) {
let method = package.interface[mname]
-%>
<li><a href='doc/action/<%= mname %>'><%= mname %>(...)</a></li>
<% } %>
</ul>

<h2>Logical Artifacts</h2>
The Data Model for the  <%- package.name %> shows how the different objects and classes of object interact
and their structure.

<img src='<%= pageDir %>/SubPackage.puml'>

<h3>Sub Packages</h3>
<ul>
<% for(let sname in package.subpackages) {
    let spkg = package.subpackages[sname];
    let spkgNoSpace = spkg.name.replace(/ /g, '');
-%>
<li><a href='<%= pageDir %>/<%= sname %>/index.html'><%= spkg.name %></a>
    <% } %>
</ul>

<img src='<%= pageDir %>/Logical.puml'>
<h3>Classes</h3>
<ul>
<% for(let cname in package.classes) {
    let cls = package.classes[cname].definition;
    let clsNoSpace = package.prefix + '/' + cls.name.replace(/ /g, '');
-%>
<li><a href='doc/model<%= clsNoSpace %>'><%= cls.name %></a>
<% } %>
</ul>



<h2>Activities and Flows</h2>
The <%= package.name %> subsystem provides the following activities and flows.


<h3>Messages Handled</h3>
<table>
    <tr>
        <th>Message</th>
        <th>Action</th>
        <th>Description</th>
    </tr>
<% for(let name in package.handlers) {
    let handler = package.handlers[name];
    for(let i in handler.handlers) {
        let h = handler.handlers[i];
%>
        <tr>
            <td><a href="doc/model/<%= global.events[handler.name].emitter.definition.name %>"><%= handler.name %> </a></td>
            <% if(h.hasOwnProperty('action')) { %>
                <td><a href="doc/action/<%= h.action %>"><%= h.action %></a></td>
            <% } else { %>
                <td> Custom Action </td>
            <% } %>
            <td> <%= h.description %> </td>
        </tr>
    <% }
} %>

</table>
<h3>Messages Sent</h3>


<h2>Deployment Environments</h2>
The <%= package.name %> subsystem can be deployed to multiple environments by deploying microservices
into the ecosystem. The following environments can be deployed.
<ul>
<% for(let env in package.deploy.envs) {
    let environ = package.deploy.envs[env];
%>
    <li><%= environ.name %></li>
<% } %>
</ul>

<% for(let env in package.deploy.envs) {
let environ = package.deploy.envs[env];
%>
<%- partial(`${pageDir}/envs/${environ.name}/_index.ejs`, {package: package, environment: environ}) %>
<% } %>

<h2>Interface Details</h2>
<% for(let mname in package.interface) {
    let method = package.interface[mname]
    method.name = mname;
-%>
<%- partial("./templates/Action/_index.ejs", {action: method}) %>
<% } %>
