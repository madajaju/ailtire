version: "3.7"
services:
  gw:
    image: traefik:latest
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --api.debug=true
      - --log.level=DEBUG
      - --providers.docker=true
      - --providers.docker.swarmMode=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=proxy
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --providers.docker.constraints=Label(`traefik.tags`,`testme`)
    ports:
      - '80:80'
      - '8080:8080'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - proxy
  serviceA:
    image: ailtire_simple:latest
    deploy:
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.tags=testme
        - traefik.http.routers.serviceA.rule=PathPrefix(`/a`)
        - traefik.http.routers.serviceA.service=serviceA
        - traefik.http.routers.serviceA.entrypoints=http
        - traefik.http.services.serviceA.loadbalancer.server.port=3000
    environment:
      AILTIRE_PORT: 3000
      AILTIRE_STACKNAME: {{.Service.Name}}-{{.Task.Slot}}
    networks:
      - proxy
  serviceB:
    image: ailtire_simple:latest
    deploy:
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.tags=testme
        - traefik.http.services.serviceB.loadbalancer.server.port=3001
        - traefik.http.routers.serviceB.rule=PathPrefix(`/b`)
        - traefik.http.routers.serviceB.service=serviceB
        - traefik.http.routers.serviceB.entrypoints=http
    environment:
      AILTIRE_PORT: 3001
      AILTIRE_STACKNAME: {{.Service.Name}}-{{.Task.Slot}}
    networks:
      - proxy

networks:
  proxy:
    driver: overlay
